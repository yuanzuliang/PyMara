# Generated by Django 2.2.12 on 2020-06-03 21:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('friend_id', models.IntegerField(verbose_name='好友ID')),
                ('dialogue', models.BooleanField(default=True, verbose_name='允许发送消息')),
                ('status', models.BooleanField(default=False, verbose_name='好友状态')),
                ('blacklist', models.BooleanField(default=False, verbose_name='黑名单')),
                ('group', models.CharField(default='我的好友', max_length=7, verbose_name='组名')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('username', models.CharField(max_length=16, unique=True, verbose_name='用户名')),
                ('avatar', models.ImageField(default='default.jpg', upload_to='avatar', verbose_name='头像')),
                ('status', models.SmallIntegerField(choices=[('0', '正常'), ('1', '限制'), ('2', '封禁'), ('3', '删除')], default='0', verbose_name='状态')),
                ('permission', models.SmallIntegerField(choices=[('1', '普通'), ('2', '会员'), ('3', '管理员'), ('4', 'GOD')], default='1', verbose_name='权限')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=16, null=True, verbose_name='姓名')),
                ('age', models.CharField(max_length=3, null=True, verbose_name='年龄')),
                ('sex', models.CharField(choices=[('1', '男'), ('2', '女'), ('3', '影藏')], max_length=1, null=True, verbose_name='性别')),
                ('birthday', models.DateField(null=True, verbose_name='生日')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('original', models.IntegerField(default=0, verbose_name='原创')),
                ('comments', models.IntegerField(default=0, verbose_name='评论')),
                ('favorite', models.IntegerField(default=0, verbose_name='收藏')),
                ('praise', models.IntegerField(default=0, verbose_name='点赞')),
                ('browse', models.IntegerField(default=0, verbose_name='浏览')),
                ('fans', models.IntegerField(default=0, verbose_name='粉丝')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecurityQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('question1', models.CharField(max_length=16, verbose_name='问题一')),
                ('question2', models.CharField(max_length=16, verbose_name='问题二')),
                ('question3', models.CharField(max_length=16, verbose_name='问题三')),
                ('answer1', models.CharField(max_length=16, verbose_name='答案一')),
                ('answer2', models.CharField(max_length=16, verbose_name='答案二')),
                ('answer3', models.CharField(max_length=16, verbose_name='答案三')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RestrictedFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('entry', models.BooleanField(default=False, verbose_name='登录')),
                ('comment', models.BooleanField(default=False, verbose_name='评论')),
                ('silence', models.BooleanField(default=False, verbose_name='聊天')),
                ('upload', models.BooleanField(default=False, verbose_name='发博客')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('password', models.CharField(max_length=32, verbose_name='密码')),
                ('ip', models.CharField(max_length=39, verbose_name='IP')),
                ('method', models.CharField(choices=[('1', '邮箱'), ('2', '手机'), ('3', '密保')], max_length=1, verbose_name='修改方式')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('genre', models.CharField(choices=[('text', '文本'), ('img', '图片'), ('link', '链接')], max_length=4, verbose_name='消息类型')),
                ('is_active', models.BooleanField(default=True, verbose_name='活跃')),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Friend')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('text', models.CharField(max_length=1024, null=True, verbose_name='文本')),
                ('img', models.ImageField(null=True, upload_to='img/message', verbose_name='图片')),
                ('link', models.CharField(max_length=128, null=True, verbose_name='链接')),
                ('message_history', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.MessageHistory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Medal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=4, verbose_name='名称')),
                ('level', models.CharField(choices=[('1', 'LEVEL 1'), ('2', 'LEVEL 2'), ('3', 'LEVEL 3'), ('4', 'LEVEL 4'), ('5', 'LEVEL 5'), ('6', 'LEVEL 6')], default='1', max_length=1, verbose_name='等级')),
                ('log', models.ImageField(upload_to='log', verbose_name='图标')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('ip', models.CharField(max_length=39, verbose_name='IP')),
                ('method', models.CharField(choices=[('1', '邮箱'), ('2', '手机号'), ('3', '微博'), ('4', 'QQ'), ('5', '微信')], max_length=1, verbose_name='登录方式')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('method', models.CharField(choices=[('1', '邮箱'), ('2', '手机号'), ('3', '微博'), ('4', 'QQ'), ('5', '微信')], max_length=1, verbose_name='登录方式')),
                ('identifier', models.CharField(max_length=16, unique=True, verbose_name='唯一标示')),
                ('token', models.CharField(max_length=32, verbose_name='登录令牌')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='friend',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.User'),
        ),
        migrations.CreateModel(
            name='AvatarHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('avatar', models.ImageField(upload_to='avatar_history', verbose_name='头像')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
